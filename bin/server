#!/usr/bin/env node

var path       = require('path'),
    bootstrap  = require('../lib/bootstrap'),
    opts       = { repl: process.env.REPL },
    configPath,
    config;

if(process.argv.length != 3) {
  console.log('Usage: ' + __filename + ' <path to config file>');
  process.exit(1);
}

configPath = path.resolve(__dirname+'/..', process.argv[2]);

try {
  config = require(configPath);
} catch(err) {
  console.warn('Could not parse config at ', configPath, err);
}

// Override wiring-pi with mock object
if( process.env.WIRING_PI && process.env.WIRING_PI === 'mock' ) {
  console.warn('Using mock wiring pi');
  opts.wpi = require('../lib/wiring-pi-mock').create();
}

function cleanup(err) {
  console.log('Cleaning up before shutdown...');
  if (err) { console.log(err.stack); }

  bootstrap.stop();

  console.log('...exit');
  process.exit();
}

process.on('SIGTERM', cleanup);
process.on('SIGINT', cleanup);
process.on('uncaughtException', cleanup);

bootstrap.start(config, opts);
